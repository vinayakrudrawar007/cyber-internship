import socket
from threading import Thread


# Port Scanner Module
def port_scanner(target_ip, start_port, end_port):
    open_ports = []
    print(f"Scanning ports {start_port}-{end_port} on {target_ip}...")
    for port in range(start_port, end_port + 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(0.5)
        result = sock.connect_ex((target_ip, port))
        if result == 0:
            open_ports.append(port)
            print(f"Port {port} is OPEN")
        sock.close()
    return open_ports


# Brute Force Module (dummy brute force with a small password list)
def brute_force(target_password, wordlist):
    print("Starting brute force attack simulation...")
    for password in wordlist:
        print(f"Trying password: {password}")
        if password == target_password:
            print(f"Password found: {password}")
            return password
    print("Password not found in the given wordlist.")
    return None


# Main toolkit function
def main():
    print("Penetration Testing Toolkit\n")

    # Example usage of port scanner
    target_ip = input("Enter target IP address: ")
    start_port = int(input("Enter start port: "))
    end_port = int(input("Enter end port: "))
    open_ports = port_scanner(target_ip, start_port, end_port)

    print("\nOpen ports:", open_ports)

    # Example usage of brute force
    target_password = input("\nEnter dummy password to brute force: ")
    wordlist = ['1234', 'password', 'admin', 'letmein', 'secret']
    brute_force(target_password, wordlist)


if __name__ == "__main__":
    main()
